from solution import appearance


def run_tests():
    """Функция для запуска всех тестов"""
    
    def test_case(name, intervals, expected_result):
        """Выполняет один тест"""
        result = appearance(intervals)
        status = "PASS" if result == expected_result else "FAIL"
        print(f"{status}: {name}")
        print(f"  Ожидаемый результат: {expected_result}")
        print(f"  Полученный результат: {result}")
        if result != expected_result:
            print(f"  ОШИБКА: результаты не совпадают!")
        print()
        return result == expected_result
    
    print("=" * 60)
    print("ЗАПУСК ТЕСТОВ ДЛЯ ФУНКЦИИ appearance")
    print("=" * 60)
    
    passed = 0
    total = 0
    
    # Тест 1: Базовый случай - полное пересечение
    total += 1
    if test_case(
        "Тест 1: Полное пересечение",
        {
            'lesson': [1, 10],
            'pupil': [2, 8],
            'tutor': [3, 7]
        },
        4  # пересечение с 3 до 7 = 4 секунды
    ):
        passed += 1
    
    # Тест 2: Частичное пересечение
    total += 1
    if test_case(
        "Тест 2: Частичное пересечение",
        {
            'lesson': [1594663200, 1594666800],  # 1 час
            'pupil': [1594663340, 1594663389, 1594663390, 1594663395, 1594663396, 1594666472],
            'tutor': [1594663290, 1594663430, 1594663443, 1594666473]
        },
        3117  # известный результат для этого примера
    ):
        passed += 1
    
    # Тест 3: Нет пересечений
    total += 1
    if test_case(
        "Тест 3: Нет пересечений",
        {
            'lesson': [1, 10],
            'pupil': [2, 4],
            'tutor': [6, 8]
        },
        0  # ученик и учитель не пересекаются
    ):
        passed += 1
    
    # Тест 4: Ученик отсутствует во время урока
    total += 1
    if test_case(
        "Тест 4: Ученик отсутствует во время урока",
        {
            'lesson': [10, 20],
            'pupil': [1, 5],
            'tutor': [12, 18]
        },
        0
    ):
        passed += 1
    
    # Тест 5: Учитель отсутствует во время урока
    total += 1
    if test_case(
        "Тест 5: Учитель отсутствует во время урока",
        {
            'lesson': [10, 20],
            'pupil': [12, 18],
            'tutor': [1, 5]
        },
        0
    ):
        passed += 1
    
    # Тест 6: Множественные заходы ученика
    total += 1
    if test_case(
        "Тест 6: Множественные заходы ученика",
        {
            'lesson': [1, 20],
            'pupil': [2, 4, 6, 8, 10, 12],  # 3 захода
            'tutor': [3, 15]
        },
        5 
    ):
        passed += 1
    
    # Тест 7: Множественные заходы учителя
    total += 1
    if test_case(
        "Тест 7: Множественные заходы учителя",
        {
            'lesson': [1, 20],
            'pupil': [2, 15],
            'tutor': [3, 5, 7, 9, 11, 13]  # 3 захода
        },
        6  # (3-5) + (7-9) + (11-13) = 2 + 2 + 2 = 6
    ):
        passed += 1
    
    # Тест 8: Точное совпадение границ
    total += 1
    if test_case(
        "Тест 8: Точное совпадение границ",
        {
            'lesson': [1, 10],
            'pupil': [1, 10],
            'tutor': [1, 10]
        },
        9  # с 1 до 10 = 9 секунд
    ):
        passed += 1
    
    # Тест 9: Краевые случаи - мгновенное присутствие
    total += 1
    if test_case(
        "Тест 9: Мгновенное присутствие",
        {
            'lesson': [1, 10],
            'pupil': [5, 5],  # мгновенное присутствие
            'tutor': [4, 6]
        },
        0  # нет пересечения, так как pupil присутствует 0 секунд
    ):
        passed += 1
    
    # Тест 10: Сложный случай с множественными интервалами
    total += 1
    if test_case(
        "Тест 10: Сложный случай",
        {
            'lesson': [0, 100],
            'pupil': [10, 20, 30, 40, 50, 60],  # 3 интервала по 10 секунд
            'tutor': [15, 25, 35, 45, 55, 65]   # 3 интервала по 10 секунд
        },
        15  # пересечения: (15-20)+(35-40)+(55-60) = 5+5+5 = 15
    ):
        passed += 1
    
    print("=" * 60)
    print(f"РЕЗУЛЬТАТЫ ТЕСТИРОВАНИЯ")
    print("=" * 60)
    print(f"Пройдено тестов: {passed}/{total}")
    print(f"Успешность: {passed/total*100:.1f}%")
    
    if passed == total:
        print(" ВСЕ ТЕСТЫ ПРОЙДЕНЫ УСПЕШНО!")
    else:
        print(" НЕКОТОРЫЕ ТЕСТЫ НЕ ПРОЙДЕНЫ")
    
    return passed == total


if __name__ == "__main__":
    run_tests()